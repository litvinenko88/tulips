// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º
document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("thConsultationForm");
  const notification = document.getElementById("thFormNotification");

  if (form) {
    form.addEventListener("submit", function (e) {
      e.preventDefault();
      notification.style.display = "none";

      // –í–∞–ª–∏–¥–∞—Ü–∏—è
      const name = form.querySelector('input[name="name"]');
      const phone = form.querySelector('input[name="phone"]');

      if (!name.value.trim()) {
        showError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è", name);
        return;
      }

      const phoneValue = phone.value.replace(/\D/g, "");
      if (!phoneValue || phoneValue.length < 11) {
        showError("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", phone);
        return;
      }

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      sendFormData({
        name: name.value.trim(),
        phone: phoneValue.startsWith("7") ? phoneValue : "7" + phoneValue,
        source: "–ì–ª–∞–≤–Ω–∞—è —Ñ–æ—Ä–º–∞",
      });
    });

    // –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneInput = form.querySelector('input[name="phone"]');
    phoneInput.addEventListener("input", function (e) {
      let value = this.value.replace(/\D/g, "");
      if (value.length > 11) value = value.substring(0, 11);

      let formattedValue = "";
      if (value.length > 0) {
        formattedValue = "+7 ";
        if (value.length > 1) formattedValue += "(" + value.substring(1, 4);
        if (value.length > 4) formattedValue += ") " + value.substring(4, 7);
        if (value.length > 7) formattedValue += "-" + value.substring(7, 9);
        if (value.length > 9) formattedValue += "-" + value.substring(9, 11);
      }

      this.value = formattedValue;
    });
  }

  function showError(message, input = null) {
    notification.textContent = message;
    notification.style.display = "block";
    notification.style.color = "red";

    if (input) {
      input.classList.add("th-error");
      input.focus();
    }
  }

  function sendFormData(data) {
    const botToken = "7757545287:AAHNWgBvNyxNfvhfz_ktJ1NCIJJqB5FxV0Y";
    const chatId = "682859146";
    const message = `üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ (${data.source}):
üë§ –ò–º—è: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +${data.phone}`;

    fetch(
      `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(
        message
      )}`
    )
      .then((response) => {
        if (response.ok) {
          showSuccess(
            "–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
          );
          form.reset();
        } else {
          throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
        }
      })
      .catch((error) => {
        showError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      });
  }

  function showSuccess(message) {
    notification.textContent = message;
    notification.style.display = "block";
    notification.style.color = "green";

    setTimeout(() => {
      notification.style.display = "none";
    }, 5000);
  }
});
